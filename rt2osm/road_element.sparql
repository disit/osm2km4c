# 	OSM2KM4C
#   Copyright (C) 2017 DISIT Lab http://www.disit.org - University of Florence
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU Affero General Public License as
#   published by the Free Software Foundation, either version 3 of the
#   License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Affero General Public License for more details.
#
#   You should have received a copy of the GNU Affero General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>. 

PREFIX dct: <http://purl.org/dc/terms/>
PREFIX units: <http://www.opengis.net/def/uom/OGC/1.0/>
PREFIX geof: <http://www.opengis.net/def/function/geosparql/>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

construct { 
  graph <http://www.disit.org/km4city/resource/GrafoStradale/RT2OSM/RoadElement/ComuneGrosseto> {
    ?det owl:sameAs ?deo .
    ?deo owl:sameAs ?det .
  }
}

where {  
  
  { 
    select (?et as ?det) (?eo as ?deo) ?dist where {
      graph <http://www.disit.org/km4city/resource/GrafoStradale/RT2OSM/RT_Graph/ComuneGrosseto> {
        ?rt a km4c:Road ;
          km4c:containsElement ?et .
        ?et km4c:startsAtNode ?est ;
          km4c:endsAtNode ?eet .
        ?est geo:geometry ?esgt .
        ?eet geo:geometry ?eegt .
      }
      graph <http://www.disit.org/km4city/resource/GrafoStradale/RT2OSM/OSM_Graph/ComuneGrosseto> {
        ?ro a km4c:Road ;
          km4c:containsElement ?eo .
        ?eo km4c:startsAtNode ?eso ;
          km4c:endsAtNode ?eeo .
        ?eso geo:geometry ?esgo .
        ?eeo geo:geometry ?eego .
      }
      graph <http://www.disit.org/km4city/resource/GrafoStradale/RT2OSM/Road/ComuneGrosseto> {
        ?rt owl:sameAs ?ro
      }
      bind(bif:st_distance(?esgt, ?esgo)+bif:st_distance(?eegt,?eego) as ?dist) .
    } 
  }

  { 
    select ( ?et as ?get ) ( min(?dist) as ?mindist ) where {
      graph <http://www.disit.org/km4city/resource/GrafoStradale/RT2OSM/RT_Graph/ComuneGrosseto> {
        ?rt a km4c:Road ;
          km4c:containsElement ?et .
        ?et km4c:startsAtNode ?est ;
          km4c:endsAtNode ?eet .
        ?est geo:geometry ?esgt .
        ?eet geo:geometry ?eegt .
      }

      graph <http://www.disit.org/km4city/resource/GrafoStradale/RT2OSM/OSM_Graph/ComuneGrosseto> {
        ?ro a km4c:Road ;
          km4c:containsElement ?eo .
        ?eo km4c:startsAtNode ?eso ;
          km4c:endsAtNode ?eeo .
        ?eso geo:geometry ?esgo .
        ?eeo geo:geometry ?eego .
      }

      graph <http://www.disit.org/km4city/resource/GrafoStradale/RT2OSM/Road/ComuneGrosseto> {
        ?rt owl:sameAs ?ro
      }

      bind(bif:st_distance(?esgt, ?esgo)+bif:st_distance(?eegt,?eego) as ?dist) .
    } 
    group by ?et 
  }

  filter(?get = ?det && ?dist = ?mindist)

}
